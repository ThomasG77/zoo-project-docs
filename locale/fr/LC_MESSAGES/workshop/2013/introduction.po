# 
msgid ""
msgstr ""
"Project-Id-Version: ZOO Project 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-01-24 19:27+0100\n"
"PO-Revision-Date: 2014-02-08 01:18+0100\n"
"Last-Translator: \n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../workshop/2013/introduction.txt:5
msgid "Introduction"
msgstr "Introduction"

#: ../../workshop/2013/introduction.txt:0
msgid "Table of Contents"
msgstr "Table des matières"

#: ../../workshop/2013/introduction.txt:12
msgid "What is ZOO ?"
msgstr "Qu'est ce que ZOO?"

#: ../../workshop/2013/introduction.txt:14
msgid "ZOO-Project is a WPS (Web Processing Service) open source project released under a `MIT/X-11 <http://zoo-project.org/trac/wiki/Licence>`__ style license. It provides an OGC WPS compliant developer-friendly framework to create and chain WPS Web services. ZOO is made of three parts:"
msgstr "Le ZOO-projet est un projet open source WPS (Web Processing Service) publié sous licence de type `MIT/X-11 <http://zoo-project.org/trac/wiki/Licence>` __ . Il fournit un framework adapté pour les développeurs conforme au standard WPS OGC afin de créer et chaîner des services Web WPS. ZOO est constitué de trois parties:"

#: ../../workshop/2013/introduction.txt:16
msgid "`ZOO Kernel <http://zoo-project.org/docs/kernel/index.html#kernel>`__ : A powerful server-side C Kernel which makes it possible to manage and chain Web services coded in different programming languages."
msgstr "`ZOO Kernel <http://zoo-project.org/docs/kernel/index.html#kernel>`__ : Un noyau côté serveur en C qui rend possible le fait de gérer et chaîner des webservices codés dans différents langages de programmation."

#: ../../workshop/2013/introduction.txt:17
msgid "`ZOO Services <http://zoo-project.org/docs/services/index.html#services>`__ : A growing suite of example Web Services based on various open source libraries."
msgstr "`Services ZOO <http://zoo-project.org/docs/services/index.html#services>`__ : Un suite grandissante d’exemples de Services Web basée sur diverses bibliothèques Open Source."

#: ../../workshop/2013/introduction.txt:18
msgid "`ZOO API <http://zoo-project.org/docs/api/index.html#api>`__ : A server-side JavaScript API able to call and chain the ZOO Services, which makes the development and chaining processes easier and faster."
msgstr "`l'API ZOO <http://zoo-project.org/docs/api/index.html#api>`__ : Une API JavaScript côté serveur capable d’appeler et de chaîner les services ZOO, qui rend le développement et le chaînage de processus plus simple et plus rapide."

#: ../../workshop/2013/introduction.txt:20
msgid "ZOO was designed to make the service creation and deployment easy, by providing a powerful system able to understand and execute WPS compliant queries. It supports seven programming languages, thus allowing you to create Web Services using the one you prefer. It also lets you use an existing code and to turn it as a WPS Service. The current supported programming languages are the following:"
msgstr "ZOO a été conçu pour rendre la création de services et un déploiement facile, en fournissant un système puissant, capable de comprendre et exécuter des requêtes conformes au standard WPS. Il supporte sept langages de programmation, vous permettant ainsi de créer des services Web en utilisant celui que vous préférez. Il vous permet également d'utiliser du code existant et de le transformer en tant que service WPS. Les langages de programmation supportés sont les suivants:"

#: ../../workshop/2013/introduction.txt:23
msgid "C/C++"
msgstr "C/C++"

#: ../../workshop/2013/introduction.txt:24
msgid "Python"
msgstr "Python"

#: ../../workshop/2013/introduction.txt:25
msgid "Perl"
msgstr "Perl"

#: ../../workshop/2013/introduction.txt:26
msgid "Java"
msgstr "Java"

#: ../../workshop/2013/introduction.txt:27
msgid "Fortran"
msgstr "Fortran"

#: ../../workshop/2013/introduction.txt:28
msgid "PHP"
msgstr "PHP"

#: ../../workshop/2013/introduction.txt:29
msgid "JavaScript"
msgstr "JavaScript"

#: ../../workshop/2013/introduction.txt:31
msgid "More information on the project is available on the  `ZOO Project official website <http://www.zoo-project.org/>`__ ."
msgstr "Plus d'informations sur le projet sont disponibles sur le `site officel du projet ZOO <http://www.zoo-project.org/>`__ ."

#: ../../workshop/2013/introduction.txt:34
msgid "How does ZOO works ?"
msgstr "Comment ZOO fonctionne ?"

#: ../../workshop/2013/introduction.txt:36
msgid "ZOO is based on a C Kernel which is the ZOO-Project core system (aka ZOO-Kernel). The latter is able to dynamically load libraries and to handle them as on-demand Web services."
msgstr "ZOO est basé sur un noyau en C qui est le système au coeur du ZOO-Project (c'est à dire le ZOO-Kernel). Ce dernier est capable de charger dynamiquement des bibliothèques et de les traiter comme des services Web à la demande."

#: ../../workshop/2013/introduction.txt:38
msgid "A ZOO-Service is a link composed of a ZOO metadata file (.zcfg) and the code for the corresponding implementation. The metadata file describes all the available functions that can be called using a WPS Execute Request, as well as the desired input/output. Services contain the algorithms and functions, and can be implemented using any of the supported languages."
msgstr "Un service ZOO est un lien composé d’un fichier de métadonnées (.zcfg) et du code pour l’implémentation correspondante. Le fichier de métadonnée décrit toutes les fonctions disponibles qui peuvent être appelée en utilisant une requête WPS \"Execute\", ainsi que les entrées/sorties désirées. Les services contiennent des algorithmes et des fonctions et peuvent être implémentés en utilisant n'importe lequel des langages supportés."

#: ../../workshop/2013/introduction.txt:40
msgid "ZOO-Kernel works as CGI through Apache and can communicate with cartographic engines and Web mapping clients. It simply adds the WPS support to your spatial data infrastructure and your webmapping applications. It can use every GDAL/OGR supported formats as input data and create suitable vector or raster output for your cartographic engine and/or your web-mapping client application."
msgstr "Le ZOO-Kernel fonctionne en tant qu'application CGI via Apache et peut communiquer avec les moteurs cartographiques et les clients de cartographie Web. Il ajoute simplement le support du WPS à votre infrastructure de données spatiales et vos applications de webmapping. Il peut utiliser tous les formats supportés par GDAL/OGR comme données en entrée et créer des sorties vecteur ou raster pour votre moteur cartographique et/ou votre application cliente de cartographie Web."

#: ../../workshop/2013/introduction.txt:43
msgid "What are we going to do in this workshop?"
msgstr "Qu'est ce que nous allons faire dans ce workshop?"

#: ../../workshop/2013/introduction.txt:45
msgid "You will learn how to use ZOO Kernel and how to create ZOO Services using the OSGeo Live 7.0. Despite a pre-compiled ZOO 1.3-dev package is provided inside OSGeoLive, some optional supports are not available in the default setup. So you will be invited to download and uncompress a tarbal containing binary versions of ZOO-Kernel, so there is no need to compile anything, simple steps to install ZOO-Kernel will be introduced. Configuration file and basic ways to run ZOO Kernel and ZOO Service will be presented. Then you will be invited to start programming your own simple service using Python language. Some ZOO Services will be presented and individually tested inside a ready-to-use OpenLayers application. Finally, this services will be chained using the server-side Javascript ZOO API."
msgstr "Vous apprendrez comment utiliser le Kernel ZOO et comment créer des Services ZOO utilisant l'OSGeo Live 7.0. Bien qu'un paquet ZOO 1.3-dev pré-compilé soit fourni dans l'OSGeoLive, certains supports optionnels ne sont pas disponibles dans la configuration par défaut. Ainsi, vous êtes invités à télécharger et décompresser un tarbal contenant des versions binaires du ZOO-Kernel. Il n'y a donc pas besoin de compiler quoi que ce soit, des étapes simples pour installer le ZOO-Kernel seront fournies. Le fichier de configuration et des méthodes de base pour exécuter le Kernel Zoo et les services ZOO seront présentés. Ensuite, vous serez invités à commencer la programmation de votre propre service simple en utilisant le langage Python. Certains services ZOO seront présentés et testés individuellement dans une application OpenLayers prêtes à utiliser. Enfin, ces services seront chaînés à l'aide de l'API ZOO Javascript côté serveur."

#: ../../workshop/2013/introduction.txt:47
msgid "The whole workshop is organized step-by-step and numerous code snippets are available. The instructors will check the ZOO-Kernel is functioning on each machine and will assist you while coding. Technical questions are of course welcome during the workshop."
msgstr "Tout le workshop est organisé étape par étape et de nombreux extraits de code sont disponibles. Les instructeurs vérifierons que le ZOO-Kernel fonctionne sur chaque machine et vous aiderons pendant que vous codez. Les questions techniques sont bien sûr bienvenues pendant le workshop."

#: ../../workshop/2013/introduction.txt:50
msgid "Usefull tips for reading"
msgstr "Conseils utiles pour la lecture"

#: ../../workshop/2013/introduction.txt:56
msgid "This is a warning message."
msgstr "Ceci est un message d'alerte."

#: ../../workshop/2013/introduction.txt:58
msgid "This is an important note."
msgstr "Ceci est une note importante."

#: ../../workshop/2013/introduction.txt:60
msgid "**Let's go !**"
msgstr "**Allons-y !**"

