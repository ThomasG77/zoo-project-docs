# 
msgid ""
msgstr ""
"Project-Id-Version: ZOO Project 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-01-24 19:27+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../workshop/2013/using_zoo_from_osgeolivevm.txt:5
msgid "Configuration and ZOO-Kernel use"
msgstr ""

#: ../../workshop/2013/using_zoo_from_osgeolivevm.txt:0
msgid "Table of Contents"
msgstr ""

#: ../../workshop/2013/using_zoo_from_osgeolivevm.txt:12
msgid "ZOO-Project Installation"
msgstr ""

#: ../../workshop/2013/using_zoo_from_osgeolivevm.txt:14
msgid ""
"To be able to follow the current material, you will have to download and "
"uncompress an archive containing the dataset, ZOO-Kernel and required "
"services. It was made available specifically for this workshop and is "
"available at : http://www.zoo-project.org/dl/ws2013-1.tar.bz2."
msgstr ""

#: ../../workshop/2013/using_zoo_from_osgeolivevm.txt:19
msgid ""
"You should use the following commands to download then uncompress the "
"archive and get it extracted with correct privileges:"
msgstr ""

#: ../../workshop/2013/using_zoo_from_osgeolivevm.txt:29
msgid "ZOO-Kernel Configuration"
msgstr ""

#: ../../workshop/2013/using_zoo_from_osgeolivevm.txt:31
msgid ""
"As already said in introduction, an OSGeoLive has been booted on your "
"computer, allowing you to use ZOO-Kernel in a development environment "
"directly."
msgstr ""

#: ../../workshop/2013/using_zoo_from_osgeolivevm.txt:33
msgid ""
"we will use ZOO-Kernel or ``zoo_loader.cgi`` script without any distinction "
"in this document."
msgstr ""

#: ../../workshop/2013/using_zoo_from_osgeolivevm.txt:36
msgid ""
"General ZOO-Kernel settings are set in the ``main.cfg`` file located in the "
"same directory as the ZOO-Kernel, so in ``/usr/lib/cgi-bin/``. You can see a"
" typical ``main.cfg`` content in the following:"
msgstr ""

#: ../../workshop/2013/using_zoo_from_osgeolivevm.txt:77
msgid ""
"The ``main.cfg`` file contains metadata informations about the "
"identification and provider but also some important settings. The file is "
"composed of various sections, namely ``[main]``, ``[identification]`` and "
"``[provider]`` per default."
msgstr ""

#: ../../workshop/2013/using_zoo_from_osgeolivevm.txt:92
msgid "From the ``[main]`` section settings are as follow:"
msgstr ""

#: ../../workshop/2013/using_zoo_from_osgeolivevm.txt:80
msgid ""
"``lang``: the supported languages separated by a coma (the first is the "
"default one),"
msgstr ""

#: ../../workshop/2013/using_zoo_from_osgeolivevm.txt:81
msgid "``version``: the supported WPS version,"
msgstr ""

#: ../../workshop/2013/using_zoo_from_osgeolivevm.txt:82
msgid "``encoding``: the default encoding of WPS Responses,"
msgstr ""

#: ../../workshop/2013/using_zoo_from_osgeolivevm.txt:83
msgid "``serverAddress``: the url to access your ZOO-Kernel instance,"
msgstr ""

#: ../../workshop/2013/using_zoo_from_osgeolivevm.txt:84
msgid ""
"``dataPath``: the path to store data files (when MapServer support was "
"activated, this directory is used to store mapfiles and data)."
msgstr ""

#: ../../workshop/2013/using_zoo_from_osgeolivevm.txt:86
msgid ""
"``tmpPath``: the path to store temporary files (such as ExecuteResponse when"
" storeExecuteResponse was set to true),"
msgstr ""

#: ../../workshop/2013/using_zoo_from_osgeolivevm.txt:88
msgid ""
"``tmpUrl``: a url relative to ``serverAddress`` to access the temporary "
"file,"
msgstr ""

#: ../../workshop/2013/using_zoo_from_osgeolivevm.txt:89
msgid ""
"``cacheDir``: the path to store cached request files [#f1]_ (optional),"
msgstr ""

#: ../../workshop/2013/using_zoo_from_osgeolivevm.txt:90
msgid "``mapservAddress``: your local MapServer address (optional),"
msgstr ""

#: ../../workshop/2013/using_zoo_from_osgeolivevm.txt:91
msgid ""
"``msOgcVersion``: the version for all supported OGC Web Services output "
"[#f2]_ (optional)."
msgstr ""

#: ../../workshop/2013/using_zoo_from_osgeolivevm.txt:94
msgid ""
"The ``[identification]`` and ``[provider]`` section are specific to OGC "
"metadata and should be set [#f3]_."
msgstr ""

#: ../../workshop/2013/using_zoo_from_osgeolivevm.txt:97
msgid ""
"Obviously, you are free to add new sections to this file if you need more. "
"Nevertheless, you have to know that there is some specific names you should "
"use only for specific needs: ``[headers]``, ``[mapserver]``, ``[env]``, "
"``[lenv]`` and ``[senv]``."
msgstr ""

#: ../../workshop/2013/using_zoo_from_osgeolivevm.txt:101
msgid ""
"``[senv]`` and ``[lenv]`` are used / produced on runtime internaly by the "
"ZOO-Kernel and should be defined only from the Service code."
msgstr ""

#: ../../workshop/2013/using_zoo_from_osgeolivevm.txt:103
msgid ""
"The ``headers`` section is used to define your own HTTP Response headers. "
"You may take a look at headers returned by web site such as http://www.zoo-"
"project.org by using curl command line tool for instance and notice the "
"specific heder ``X-Powered-By: Zoo-Project@Trac``."
msgstr ""

#: ../../workshop/2013/using_zoo_from_osgeolivevm.txt:108
msgid ""
"There is no reason to define basic headers such as ``Content-Type`` or "
"``encoding`` as they will be overwritten at runtime by the ZOO-Kernel."
msgstr ""

#: ../../workshop/2013/using_zoo_from_osgeolivevm.txt:112
msgid ""
"The ``mapserver`` section is used to store specific mapserver configuration "
"parameter such as PROJ_LIB and GDAL_DATA or any other you want to be set to "
"make your MapServer working."
msgstr ""

#: ../../workshop/2013/using_zoo_from_osgeolivevm.txt:116
msgid "the ``mapserver`` section is mainly used on WIN32 platform"
msgstr ""

#: ../../workshop/2013/using_zoo_from_osgeolivevm.txt:119
msgid ""
"The ``env`` section is used to store specific environment variables you want"
" to be set prior to load your Services Provider and run your Service. A "
"typical example, is when your Service requires to access to a X server "
"running on framebuffer, then you will have to set the ``DISPLAY`` "
"environnement variable, in this case you would add ``DISPLAY=:1`` line in "
"your ``[env]`` section."
msgstr ""

#: ../../workshop/2013/using_zoo_from_osgeolivevm.txt:125
msgid ""
"The ``lenv`` is used to store runtime informations automatically set by the "
"ZOO-Kernel before running your service and can be accesses / updated from "
"it:"
msgstr ""

#: ../../workshop/2013/using_zoo_from_osgeolivevm.txt:127
msgid "``sid``: the service unique identifier,"
msgstr ""

#: ../../workshop/2013/using_zoo_from_osgeolivevm.txt:128
msgid ""
"``status``: the current progress value (value between 0 and 100, percent),"
msgstr ""

#: ../../workshop/2013/using_zoo_from_osgeolivevm.txt:129
msgid "``cwd``: the current working directory of the ZOO-Kernel,"
msgstr ""

#: ../../workshop/2013/using_zoo_from_osgeolivevm.txt:130
msgid ""
"``message``: an error message when returning ``SERVICE_FAILED`` (optional),"
msgstr ""

#: ../../workshop/2013/using_zoo_from_osgeolivevm.txt:131
msgid ""
"``cookie``: the cookie your service want to return to the client (for "
"authentication purpose or tracking)."
msgstr ""

#: ../../workshop/2013/using_zoo_from_osgeolivevm.txt:134
msgid ""
"The ``senv`` is used to store session informations on the server side. You "
"can then access them automatically from service if the server is requested "
"using a valid cookie (as defined in ``lenv > cookie``). The ZOO-Kernel will "
"store on disk the values set in the ``senv`` maps, then load it and "
"dynamically add its content to the one available in the ``main.cfg``. The "
"``senv`` section should contain at least:"
msgstr ""

#: ../../workshop/2013/using_zoo_from_osgeolivevm.txt:142
msgid ""
"``XXX``: the session unique identifier where ``XXX`` is the name included in"
" the"
msgstr ""

#: ../../workshop/2013/using_zoo_from_osgeolivevm.txt:142
msgid "returned cookie."
msgstr ""

#: ../../workshop/2013/using_zoo_from_osgeolivevm.txt:146
msgid ""
"For instance, if you get the following in your Service source code [#f4]_ :"
msgstr ""

#: ../../workshop/2013/using_zoo_from_osgeolivevm.txt:153
msgid ""
"That means that the ZOO-Kernel will create a file ``sess_XXX1000000.cfg`` in"
" the ``cacheDir`` and return the specified cookie to the client. Each time "
"the client will request the ZOO-Kernel using the Cookie, it will "
"automatically load the value stored before running your service. You can "
"then easilly access this informations from your service source code. This "
"functionality won't be used in the following presentation."
msgstr ""

#: ../../workshop/2013/using_zoo_from_osgeolivevm.txt:160
msgid "Testing the ZOO installation with GetCapabilities"
msgstr ""

#: ../../workshop/2013/using_zoo_from_osgeolivevm.txt:163
msgid ""
"You can request ZOO-Kernel using the following link from your Internet "
"browser:"
msgstr ""

#: ../../workshop/2013/using_zoo_from_osgeolivevm.txt:165
msgid ""
"http://localhost/cgi-bin/zoo_loader.cgi?Request=GetCapabilities&Service=WPS"
msgstr ""

#: ../../workshop/2013/using_zoo_from_osgeolivevm.txt:167
msgid ""
"You should get a valid Capabilities XML document, looking like the following"
" :"
msgstr ""

#: ../../workshop/2013/using_zoo_from_osgeolivevm.txt:173
msgid ""
"Please note that some Process node are returned in the ProcessOfferings "
"section, as somes are available already on OSGeoLive DVD. You can also run a"
" GetCapabilities request from the command line, using the following command:"
msgstr ""

#: ../../workshop/2013/using_zoo_from_osgeolivevm.txt:180
msgid ""
"The same result as in your browser will be returned, as shown in the "
"following screenshot:"
msgstr ""

#: ../../workshop/2013/using_zoo_from_osgeolivevm.txt:186
msgid ""
"Invoking ZOO Kernel from command line can be helpful during development "
"process of new Services."
msgstr ""

#: ../../workshop/2013/using_zoo_from_osgeolivevm.txt:189
msgid "Footnotes"
msgstr ""

#: ../../workshop/2013/using_zoo_from_osgeolivevm.txt:190
msgid ""
"when you use GET requests passed through ``xlink:href`` the ZOO-Kernel will "
"execute the request only once, the first time you will ask for this "
"ressource and it will store on disk the result. The next time you will need "
"the same feature, the cached file will be used which make your process "
"running faster. If ``cachedir`` was not specified in the ``main.cfg`` then "
"``tmpPath`` value will be used."
msgstr ""

#: ../../workshop/2013/using_zoo_from_osgeolivevm.txt:195
msgid ""
"since version 1.3dev, when MapServer is activated, your service can "
"automatically return a WMS, WFS or WCS request to expose your data. Your can"
" set here the specific version number you want to use to request your local "
"MapServer setup. It depends mostly on the client capability to deal with "
"specific OGC Web Services version."
msgstr ""

#: ../../workshop/2013/using_zoo_from_osgeolivevm.txt:199
msgid ""
"since version 1.3dev, when MapServer is activated, the same metadata will be"
" used for setting metadata for OGC Web Services."
msgstr ""

#: ../../workshop/2013/using_zoo_from_osgeolivevm.txt:201
msgid ""
"If you're not familiar with ZOO-Project, you can `pass "
"<using_zoo_from_osgeolivevm#testing-the-zoo-installation-with-"
"getcapabilities>`__  this part and come to it after the next section."
msgstr ""
